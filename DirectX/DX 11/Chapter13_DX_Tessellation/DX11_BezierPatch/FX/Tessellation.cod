//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   64
}

//
// 2 local object(s)
//
Texture2D gDiffuseMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 Tess
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_output o0.xyz
                dcl_temps 1
                
                #line 51 "D:\Data\Books\Book IV\Code\Chapter 13\BasicTessellation\FX\Tessellation.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                ret 
                // Approximately 3 instruction slots used
                            
            };
            HullShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TessFactor            0   x           0 QUADEDGE  float   x   
                // SV_TessFactor            1   x           1 QUADEDGE  float   x   
                // SV_TessFactor            2   x           2 QUADEDGE  float   x   
                // SV_TessFactor            3   x           3 QUADEDGE  float   x   
                // SV_InsideTessFactor      0   x           4  QUADINT  float   x   
                // SV_InsideTessFactor      1   x           5  QUADINT  float   x   
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                // Tessellation Output Primitive  Partitioning Type 
                // ------------------------------ ------------------
                // Clockwise Triangles            Integer           
                //
                hs_5_0
                hs_decls 
                dcl_input_control_point_count 4
                dcl_output_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_tessellator_partitioning partitioning_integer
                dcl_tessellator_output_primitive output_triangle_cw
                dcl_hs_max_tessfactor l(64.000000)
                dcl_globalFlags refactoringAllowed
                
                #line 121 "D:\Data\Books\Book IV\Code\Chapter 13\BasicTessellation\FX\Tessellation.fx"
                hs_control_point_phase 
                dcl_input vOutputControlPointID
                dcl_input v[4][0].xyz
                dcl_output o0.xyz
                dcl_temps 1
                mov r0.x, vOutputControlPointID  // hout<0,1,2>
                mov r0.xyz, v[r0.x + 0][0].xyzx  // HS<0,1,2>
                mov o0.xyz, r0.xyzx
                
                #line 99
                ret   // ConstantHS<0: 3f>
                hs_join_phase   // ConstantHS<1: 3f>
                dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
                dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
                dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
                dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
                dcl_output_siv o4.x, finalQuadUInsideTessFactor
                dcl_output_siv o5.x, finalQuadVInsideTessFactor
                mov o0.x, l(3.000000)  // ConstantHS<2: 3f>
                mov o1.x, l(3.000000)  // ConstantHS<3: 3f>
                mov o2.x, l(3.000000)  // ConstantHS<4: 3f>
                mov o3.x, l(3.000000)  // ConstantHS<5: 3f>
                mov o4.x, l(3.000000)
                
                // incorrect instruction offset in debug info
                mov o5.x, l(3.000000)
                // incorrect instruction offset in debug info
                
                
                // incorrect instruction offset in debug info
                ret 
                // incorrect instruction offset in debug info
                
                // Approximately 11 instruction slots used
                            
            };
            DomainShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } gMaterial;                       // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Patch Constant signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TessFactor            0   x           0 QUADEDGE  float       
                // SV_TessFactor            1   x           1 QUADEDGE  float       
                // SV_TessFactor            2   x           2 QUADEDGE  float       
                // SV_TessFactor            3   x           3 QUADEDGE  float       
                // SV_InsideTessFactor      0   x           4  QUADINT  float       
                // SV_InsideTessFactor      1   x           5  QUADINT  float       
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   x z 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                //
                // Tessellation Domain   # of control points
                // -------------------- --------------------
                // Quadrilateral                           4
                //
                ds_5_0
                dcl_input_control_point_count 4
                dcl_tessellator_domain domain_quad
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input vDomain.xy
                dcl_input vicp[4][0].xz
                dcl_output_siv o0.xyzw, position
                dcl_temps 2
                
                #line 141 "D:\Data\Books\Book IV\Code\Chapter 13\BasicTessellation\FX\Tessellation.fx"
                mov r0.x, -vDomain.y
                add r0.x, r0.x, l(1.000000)
                mov r0.yz, -vicp[0][0].xxzx
                add r0.yz, r0.yyzy, vicp[1][0].xxzx
                mul r0.yz, r0.yyzy, r0.xxxx
                add r0.yz, r0.yyzy, vicp[0][0].xxzx  // v1<0:NaN:Inf,2:NaN:Inf>
                mov r1.xy, -vicp[3][0].xzxx
                add r1.xy, r1.xyxx, vicp[2][0].xzxx
                mul r0.xw, r0.xxxx, r1.xxxy
                add r0.xw, r0.xxxw, vicp[3][0].xxxz  // v2<0:NaN:Inf,2:NaN:Inf>
                mov r1.xy, -r0.yzyy
                add r0.xw, r0.xxxw, r1.xxxy
                mul r0.xw, r0.xxxw, vDomain.xxxx
                add r0.xz, r0.xxwx, r0.yyzy  // p<0:NaN:Inf,2:NaN:Inf>
                
                #line 148
                mov r0.yw, l(0,0,0,1.000000)
                dp4 r1.x, r0.xyzw, cb0[8].xyzw  // dout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[9].xyzw  // dout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[10].xyzw  // dout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[11].xyzw  // dout<3:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // DS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 155 "D:\Data\Books\Book IV\Code\Chapter 13\BasicTessellation\FX\Tessellation.fx"
                mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // PS<0: 1f,1: 1f,2: 1f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

