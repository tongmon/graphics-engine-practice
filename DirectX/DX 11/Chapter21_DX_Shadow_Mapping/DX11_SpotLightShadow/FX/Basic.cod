//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    float4x4 gShadowTransform;          // Offset:  256, size:   64
    Material gMaterial;                 // Offset:  320, size:   64
}

//
// 5 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gShadowMap;
TextureCube gCubeMap;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState samShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 44 technique(s)
    //
    technique11 Light1
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r5.xyz, -r8.xyzx
                dp3 r3.w, r5.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r5.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r6.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r7.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r0.wwww, r1.xyzx
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, r0.wwww
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 86 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r8.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r1.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r2.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r0.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r4.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 120 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s0, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r8.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r1.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r2.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r0.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r11.xyz, -r11.xyzx
                dp3 r2.w, r11.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r12.xyz, r0.xyzx, r2.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r11.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r11.xyz, r3.xyzx, r0.wwww
                mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r11.xyz, r4.xyzx, r2.wwww
                mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r4.xyzx, r0.xxxx
                mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 154 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 113 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 128
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 178
                mul r0.w, r0.w, cb0[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r4.w, r6.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r0.xyz, r0.xyzx, r4.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r1.wwww
                mul r1.xyz, r7.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r8.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r0.wwww, r1.xyzx
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, r0.wwww
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 87 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r4.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 121 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r4.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 155 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 113 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 128
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 178
                mul r0.w, r0.w, cb0[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r4.w, r6.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r0.xyz, r0.xyzx, r4.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r1.wwww
                mul r1.xyz, r7.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r8.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r0.wwww, r1.xyzx
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, r0.wwww
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 91 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r4.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 125 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r4.xxyz, r0.wwww
                mul r0.yzw, r10.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r5.xyzx, r0.xxxx
                mul r1.xyz, r11.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r0.xyz, r0.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 159 instruction slots used
                            
            };
        }

    }

    technique11 Light1Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r2.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r2.w
                mov r5.xyz, -r8.xyzx
                dp3 r5.w, r5.xyzx, r0.xyzx
                add r5.w, r5.w, r5.w
                mov r5.w, -r5.w
                mul r0.xyz, r0.xyzx, r5.wwww
                add r0.xyz, r5.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r2.wwww
                mul r1.xyz, r6.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r7.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r1.xyzx, r1.wwww
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 95 instruction slots used
                            
            };
        }

    }

    technique11 Light2Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r2.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r2.w
                mov r8.xyz, -r8.xyzx
                dp3 r5.w, r8.xyzx, r0.xyzx
                add r5.w, r5.w, r5.w
                mov r5.w, -r5.w
                mul r9.xyz, r0.xyzx, r5.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r5.w, r8.xyzx, r1.xyzx
                max r5.w, r5.w, l(0.000000)
                log r5.w, r5.w
                mul r5.w, r4.w, r5.w
                exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r2.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r5.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r1.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r11.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r9.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r10.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 129 instruction slots used
                            
            };
        }

    }

    technique11 Light3Fog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samShadow                       sampler_c      NA          NA    0        1
                // gShadowMap                        texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s0, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r2.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r2.w
                mov r8.xyz, -r8.xyzx
                dp3 r5.w, r8.xyzx, r0.xyzx
                add r5.w, r5.w, r5.w
                mov r5.w, -r5.w
                mul r9.xyz, r0.xyzx, r5.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r5.w, r8.xyzx, r1.xyzx
                max r5.w, r5.w, l(0.000000)
                log r5.w, r5.w
                mul r5.w, r4.w, r5.w
                exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r2.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r5.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r1.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r11.xyz, -r11.xyzx
                dp3 r3.w, r11.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r11.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r11.xyz, r3.xyzx, r1.wwww
                mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r11.xyz, r4.xyzx, r3.wwww
                mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r11.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r0.xyz, r0.xyzx, r3.wwww
                add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r3.xyzx, r1.wwww
                mul r1.xyz, r9.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r4.xyzx, r0.xxxx
                mul r0.xyz, r10.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r2.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 163 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 100 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 128
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 171
                mov r0.y, -cb0[12].w
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r1.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 19 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r6.xyz, -r9.xyzx
                dp3 r6.w, r6.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r0.xyz, r0.xyzx, r6.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r3.wwww
                mul r1.xyz, r7.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r8.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r4.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r4.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r1.xyzx, r1.wwww
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 96 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r0.xyz, r0.xyzx, r4.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 130 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r4.w, r12.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r13.xyz, r0.xyzx, r4.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r12.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r4.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r0.xyz, r0.xyzx, r4.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 164 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 100 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.y, r1.w, l(-0.100000)
                lt r0.y, r0.y, l(0.000000)
                and r0.y, r0.y, l(-1)
                discard r0.y
                
                #line 128
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 171
                mov r0.y, -cb0[12].w
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r1.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r6.xyz, -r9.xyzx
                dp3 r6.w, r6.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r0.xyz, r0.xyzx, r6.wwww
                add r0.xyz, r6.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r3.wwww
                mul r1.xyz, r7.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r8.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r4.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r4.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r1.xyzx, r1.wwww
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 100 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r0.xyz, r0.xyzx, r4.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 134 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r4.w, r12.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r13.xyz, r0.xyzx, r4.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r12.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r4.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r0.xyz, r0.xyzx, r4.wwww
                add r0.xyz, r9.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r1.xyz, r4.xyzx, r1.wwww
                mul r1.xyz, r10.xyzx, r1.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r5.xyzx, r0.xxxx
                mul r0.xyz, r11.xyzx, r0.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r1.xyz, r3.wwww, r1.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r0.xyz, r3.wwww, r0.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r1.xyz, r1.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r1.xyz, r1.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r0.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r1.xyz, r1.xyzx, r3.xyzx
                mul r1.xyz, r1.xyzx, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 168 instruction slots used
                            
            };
        }

    }

    technique11 Light1Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r5.xyz, -r8.xyzx
                dp3 r3.w, r5.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r8.xyz, r0.xyzx, r3.wwww
                add r5.xyz, r5.xyzx, r8.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r5.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r3.xyz, r3.xyzx, r1.wwww
                mul r3.xyz, r6.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, r3.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r3.xyz, r2.wwww, r3.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r3.xyz, r3.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r3.xyz, r0.wwww, r3.xyzx
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r0.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r4.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 96 instruction slots used
                            
            };
        }

    }

    technique11 Light2Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r8.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r1.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r2.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r0.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r3.xyz, r3.xyzx, r0.wwww
                mul r3.xyz, r9.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, r2.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r3.xyz, r1.wwww, r3.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r3.xyz, r3.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r3.xyz, r3.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r4.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 130 instruction slots used
                            
            };
        }

    }

    technique11 Light3Reflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t0.xxxx, s1, r2.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r8.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r9.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r1.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r2.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r2.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r0.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r11.xyz, -r11.xyzx
                dp3 r2.w, r11.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r12.xyz, r0.xyzx, r2.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r11.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r11.xyz, r3.xyzx, r0.wwww
                mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r11.xyz, r4.xyzx, r2.wwww
                mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r11.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r3.xyz, r3.xyzx, r0.wwww
                mul r3.xyz, r9.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, r2.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r3.xyz, r1.wwww, r3.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r3.xyz, r3.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r3.xyz, r3.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r4.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 164 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 113 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 128
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 178
                mul r0.w, r0.w, cb0[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r4.w, r6.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r9.xyz, r0.xyzx, r4.wwww
                add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r6.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r1.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r4.wwww
                mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r4.xyz, r0.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r0.wwww, r5.xyzx
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 97 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 131 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 165 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 113 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                and r1.x, r1.x, l(-1)
                discard r1.x
                
                #line 128
                mov r0.xyz, r0.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 178
                mul r0.w, r0.w, cb0[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:Inf,1:Inf,2:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 10 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r6.xyz, -r9.xyzx
                dp3 r4.w, r6.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r9.xyz, r0.xyzx, r4.wwww
                add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r6.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r1.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r4.wwww
                mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r4.xyz, r0.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r0.wwww, r5.xyzx
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 101 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 135 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  208 Size:     4 [unused]
                //   float4 gFogColor;                  // Offset:  224 Size:    16 [unused]
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[13], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.w, r2.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.yzyy, t1.xxxx, s1, r3.x
                add r0.w, r0.w, r1.w  // percentLit<0:[0f,9f]>
                
                #line 256
                div r0.w, r0.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r9.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r10.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r1.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r4.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r3.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r0.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r0.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r3.w, r12.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r13.xyz, r0.xyzx, r3.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r12.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r0.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r3.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r1.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r3.w, r9.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r9.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r5.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r0.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r3.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r1.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r1.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r0.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 169 instruction slots used
                            
            };
        }

    }

    technique11 Light1FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r2.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r2.w
                mov r5.xyz, -r8.xyzx
                dp3 r5.w, r5.xyzx, r0.xyzx
                add r5.w, r5.w, r5.w
                mov r5.w, -r5.w
                mul r8.xyz, r0.xyzx, r5.wwww
                add r5.xyz, r5.xyzx, r8.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r5.x, r5.xyzx, r1.xyzx
                max r5.x, r5.x, l(0.000000)
                log r5.x, r5.x
                mul r4.w, r4.w, r5.x
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r3.xyz, r3.xyzx, r2.wwww
                mul r3.xyz, r6.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, r4.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r3.xyz, r3.wwww, r3.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r3.xyz, r3.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r3.xyz, r1.wwww, r3.xyzx
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r1.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r4.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 105 instruction slots used
                            
            };
        }

    }

    technique11 Light2FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r2.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r2.w
                mov r8.xyz, -r8.xyzx
                dp3 r5.w, r8.xyzx, r0.xyzx
                add r5.w, r5.w, r5.w
                mov r5.w, -r5.w
                mul r9.xyz, r0.xyzx, r5.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r5.w, r8.xyzx, r1.xyzx
                max r5.w, r5.w, l(0.000000)
                log r5.w, r5.w
                mul r5.w, r4.w, r5.w
                exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r2.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r5.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r1.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r11.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r11.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r3.xyz, r3.xyzx, r1.wwww
                mul r3.xyz, r9.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, r3.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r3.xyz, r2.wwww, r3.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r3.xyz, r3.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r3.xyz, r3.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r4.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 139 instruction slots used
                            
            };
        }

    }

    technique11 Light3FogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gShadowMap                        texture  float4          2d    0        1
                // gCubeMap                          texture  float4        cube    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                nop 
                mov r2.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r2.xyz, r2.zxyz, r2.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                
                #line 253
                add r3.xy, r2.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r3.xy, r2.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,2f]>
                add r3.xy, r2.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,3f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,4f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,5f]>
                add r3.xy, r2.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,6f]>
                add r3.xy, r2.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,7f]>
                add r3.xy, r2.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.w  // percentLit<0:[0f,8f]>
                add r2.yz, r2.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.yzyy, t0.xxxx, s1, r2.x
                add r1.w, r1.w, r2.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r2.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r2.w
                mov r8.xyz, -r8.xyzx
                dp3 r5.w, r8.xyzx, r0.xyzx
                add r5.w, r5.w, r5.w
                mov r5.w, -r5.w
                mul r9.xyz, r0.xyzx, r5.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r5.w, r8.xyzx, r1.xyzx
                max r5.w, r5.w, l(0.000000)
                log r5.w, r5.w
                mul r5.w, r4.w, r5.w
                exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r2.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r5.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r3.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r3.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r6.xyz, r1.wwww, r6.xyzx
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r11.xyz, -r11.xyzx
                dp3 r3.w, r11.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r12.xyz, r0.xyzx, r3.wwww
                add r11.xyz, r11.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r11.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r11.xyz, r3.xyzx, r1.wwww
                mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r11.xyz, r4.xyzx, r3.wwww
                mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r9.xyz, r2.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r10.xyz, r2.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r8.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r2.w, l(0.000000), r1.w
                mov r8.xyz, -r11.xyzx
                dp3 r3.w, r8.xyzx, r0.xyzx
                add r3.w, r3.w, r3.w
                mov r3.w, -r3.w
                mul r11.xyz, r0.xyzx, r3.wwww
                add r8.xyz, r8.xyzx, r11.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r3.w, r8.xyzx, r1.xyzx
                max r3.w, r3.w, l(0.000000)
                log r3.w, r3.w
                mul r3.w, r3.w, r4.w
                exp r3.w, r3.w  // specFactor<0:NaN:Inf>
                mul r3.xyz, r3.xyzx, r1.wwww
                mul r3.xyz, r9.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, r3.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r3.xyz, r2.wwww, r3.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r4.xyz, r2.wwww, r4.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r3.xyz, r3.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r4.xyz, r4.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r3.xyz, r3.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r2.xyz, r4.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t1.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 173 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 100 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 128
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 171
                mov r0.y, -cb0[12].w
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r1.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 19 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r6.xyz, -r9.xyzx
                dp3 r6.w, r6.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r9.xyz, r0.xyzx, r6.wwww
                add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.x, r6.xyzx, r1.xyzx
                max r6.x, r6.x, l(0.000000)
                log r6.x, r6.x
                mul r5.w, r5.w, r6.x
                exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r3.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r5.wwww
                mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r4.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r4.xyz, r1.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r1.wwww, r5.xyzx
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 106 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r12.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r4.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 140 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r4.w, r12.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r13.xyz, r0.xyzx, r4.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r12.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r4.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r12.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r4.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 174 instruction slots used
                            
            };
        }

    }

    technique11 Light0TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192 [unused]
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 100 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, -v1.xyzx
                add r0.xyz, r0.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.x, r0.xyzx, r0.xyzx
                sqrt r0.x, r0.x  // distToEye<0:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r0.y, r1.w, l(-0.100000)
                lt r0.y, r0.y, l(0.000000)
                and r0.y, r0.y, l(-1)
                discard r0.y
                
                #line 128
                mov r1.xyz, r1.xyzx  // litColor<0:Inf,1:Inf,2:Inf>
                
                #line 171
                mov r0.y, -cb0[12].w
                add r0.x, r0.y, r0.x
                div r0.x, r0.x, cb0[13].x
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r0.yzw, -r1.xxyz
                add r0.yzw, r0.yyzw, cb0[14].xxyz
                mul r0.xyz, r0.yzwy, r0.xxxx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r1.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

    technique11 Light1TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r6.xyz, -r9.xyzx
                dp3 r6.w, r6.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r9.xyz, r0.xyzx, r6.wwww
                add r6.xyz, r6.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.x, r6.xyzx, r1.xyzx
                max r6.x, r6.x, l(0.000000)
                log r6.x, r6.x
                mul r5.w, r5.w, r6.x
                exp r5.w, r5.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r3.wwww
                mul r4.xyz, r7.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r5.wwww
                mul r5.xyz, r8.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r4.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r4.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r4.xyz, r1.wwww, r4.xyzx
                add r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r1.wwww, r5.xyzx
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 110 instruction slots used
                            
            };
        }

    }

    technique11 Light2TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r12.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r4.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 144 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFogReflect
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 74 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 78
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                
                #line 81
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                
                #line 84
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<12:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<13:NaN:Inf>
                dp4 r4.z, r0.xyzw, cb0[18].xyzw  // vout<14:NaN:Inf>
                dp4 r4.w, r0.xyzw, cb0[19].xyzw  // vout<15:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r4.xyzw  // VS<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r5.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 26 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights[3];                   // Offset:    0 Size:   192
                //   float3 gEyePosW;                   // Offset:  192 Size:    12
                //   float gFogStart;                   // Offset:  204 Size:     4
                //   float gFogRange;                   // Offset:  208 Size:     4
                //   float4 gFogColor;                  // Offset:  224 Size:    16
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // samShadow                       sampler_c      NA          NA    1        1
                // gDiffuseMap                       texture  float4          2d    0        1
                // gShadowMap                        texture  float4          2d    1        1
                // gCubeMap                          texture  float4        cube    2        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[24], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texturecube (float,float,float,float) t2
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 97 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 100
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 103
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 106
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 113
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 120
                add r1.w, r2.w, l(-0.100000)
                lt r1.w, r1.w, l(0.000000)
                and r1.w, r1.w, l(-1)
                discard r1.w
                
                #line 138
                nop 
                mov r3.xyzw, v4.xyzw  // shadowPosH<0,1,2,3>
                
                #line 233 "LightHelper.fx"
                div r3.xyz, r3.zxyz, r3.wwww  // shadowPosH<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 236
                mov r3.x, r3.x  // depth<0:NaN:Inf>
                
                #line 253
                add r4.xy, r3.yzyy, l(-0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, l(0.000000)  // percentLit<0:[0f,1f]>
                add r4.xy, r3.yzyy, l(0.000000, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,2f]>
                add r4.xy, r3.yzyy, l(0.000488, -0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,3f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,4f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,5f]>
                add r4.xy, r3.yzyy, l(0.000488, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,6f]>
                add r4.xy, r3.yzyy, l(-0.000488, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,7f]>
                add r4.xy, r3.yzyy, l(0.000000, 0.000488, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.w  // percentLit<0:[0f,8f]>
                add r3.yz, r3.yyzy, l(0.000000, 0.000488, 0.000488, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t1.xxxx, s1, r3.x
                add r1.w, r1.w, r3.x  // percentLit<0:[0f,9f]>
                
                #line 256
                div r1.w, r1.w, l(9.000000)  // percentLit<0:[0f,1f]>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                nop 
                mov r3.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r4.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r5.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r6.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r7.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r8.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r9.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r6.xyz, r3.xyzx, r6.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r3.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r4.w, l(0.000000), r3.w
                mov r9.xyz, -r9.xyzx
                dp3 r6.w, r9.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r10.xyz, r0.xyzx, r6.wwww
                add r9.xyz, r9.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r6.w, r9.xyzx, r1.xyzx
                max r6.w, r6.w, l(0.000000)
                log r6.w, r6.w
                mul r6.w, r5.w, r6.w
                exp r6.w, r6.w  // specFactor<0:NaN:Inf>
                mul r9.xyz, r4.xyzx, r3.wwww
                mul r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r5.xyzx, r6.wwww
                mul r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r7.xyz, r4.wwww, r7.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r8.xyz, r4.wwww, r8.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r6.xyz, r6.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r7.xyz, r7.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r8.xyz, r8.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                mul r7.xyz, r1.wwww, r7.xyzx
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r1.wwww, r8.xyzx
                add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[7].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r9.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r12.xyz, -r12.xyzx
                dp3 r4.w, r12.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r13.xyz, r0.xyzx, r4.wwww
                add r12.xyz, r12.xyzx, r13.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r12.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r12.xyz, r4.xyzx, r1.wwww
                mul r10.xyz, r10.xyzx, r12.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r12.xyz, r5.xyzx, r4.wwww
                mul r11.xyz, r11.xyzx, r12.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r10.xyz, r3.wwww, r10.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r11.xyz, r3.wwww, r11.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r9.xyz, r9.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r10.xyz, r10.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r11.xyz, r11.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r6.xyz, r6.xyzx, r9.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r7.xyz, r7.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r9.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r8.xyz, r8.xyzx, r9.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145
                nop 
                mov r9.xyz, cb0[8].xyzx  // L<0,1,2>
                mov r10.xyz, cb0[9].xyzx  // L<4,5,6>
                mov r11.xyz, cb0[10].xyzx  // L<8,9,10>
                mov r12.xyz, cb0[11].xyzx  // L<12,13,14>
                
                #line 70 "LightHelper.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r3.xyz, r3.xyzx, r9.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r1.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r3.w, l(0.000000), r1.w
                mov r9.xyz, -r12.xyzx
                dp3 r4.w, r9.xyzx, r0.xyzx
                add r4.w, r4.w, r4.w
                mov r4.w, -r4.w
                mul r12.xyz, r0.xyzx, r4.wwww
                add r9.xyz, r9.xyzx, r12.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r4.w, r9.xyzx, r1.xyzx
                max r4.w, r4.w, l(0.000000)
                log r4.w, r4.w
                mul r4.w, r4.w, r5.w
                exp r4.w, r4.w  // specFactor<0:NaN:Inf>
                mul r4.xyz, r4.xyzx, r1.wwww
                mul r4.xyz, r10.xyzx, r4.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, r4.wwww
                mul r5.xyz, r11.xyzx, r5.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r4.xyz, r3.wwww, r4.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r5.xyz, r3.wwww, r5.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 145 "D:\Data\Books\Book IV\Code\Chapter 21 Shadows\Shadows\FX\Basic.fx"
                mov r3.xyz, r3.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r4.xyz, r4.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, r5.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 148
                add r3.xyz, r3.xyzx, r6.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r4.xyz, r4.xyzx, r7.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r5.xyz, r5.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 153
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx
                add r2.xyz, r5.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 157
                mov r1.xyz, -r1.xyzx  // incident<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r1.w, r1.xyzx, r0.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r0.xyz, r0.xyzx, r1.wwww
                add r0.xyz, r1.xyzx, r0.xyzx  // reflectionVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                sample_indexable(texturecube)(float,float,float,float) r0.xyz, r0.xyzx, t2.xyzw, s0
                mov r0.xyz, r0.xyzx  // reflectionColor<0:Inf,1:Inf,2:Inf>
                mul r0.xyz, r0.xyzx, cb1[23].xyzx
                add r0.xyz, r0.xyzx, r2.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                mov r1.x, -cb0[12].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[13].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogLerp<0:[0f,1f]>
                
                #line 174
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[14].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 178
                mul r0.w, r2.w, cb1[21].w  // litColor<3:NaN:Inf>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3:NaN:Inf>
                ret 
                // Approximately 178 instruction slots used
                            
            };
        }

    }

}

