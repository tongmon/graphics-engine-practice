프로그래밍에서 라이팅은 실제 빛 효과를 프로그램 상에 만드는 것이 아니라
물체 정점의 색상값에 변화를 주는 방식이다.

법선 벡터가 라이팅에 매우 중요하다. 
법선벡터와 빛 방향이 이루는 각도에 따라 픽셀의 색상이 결정된다.

A. 프로그래밍에서 물질은 몇 가지 속성을 가진다.
diffuse: 빛이 물체에 닿았을 때 반사하게 되는 색상

ambient: 주변광으로 빛이 없더라도 해당 조명은 존재한다는 것을 의미한다.
즉 방향성이 없는 빛에 대한 반사색을 설정한다.
게임에서 많이 사용하는 Direction Light에서는 보통 배제된다.

Specular: 빛에 의한 밝은 부분의 반사색보다 반짝이게 하는 색상을 설정하는 경우
사용된다.
쉽게 말해서 당구공에 빛을 비주면 완전 하얗게 하이라이트되는 부분이 생기는데 이 부분을
설정하는 경우를 말한다.

Emissive: 물체 자체에서 방출하게 되는 빛을 설정할 때 사용된다.

Power: 스펙큐러 하이라이트의 선명도를 지정하는 부동 소수값이다.
값이 높아지면 하이라이트 부분이 선명해진다.
즉 Specular의 선명도를 결정하는 부분이라고 생각하자.

B.1 프로그래밍에서 빛은 몇 가지 속성을 가진다.
diffuse: 라이트가 비추는 빛의 색상, 주의할 것은 물질(Material)의 diffuse 값과 연동하여 실제로 보여지는 색상이 결정된다.
예를 들어 물질의 diffuse가 1, 0, 0이고 빛의 diffuse가 1, 1, 1이라면 물질은 빨간색으로 잘 보일 것이다.
근데 물질의 diffuse가 0, 1, 0이고 빛의 diffuse가 1, 0, 1이라면 빛과 관련된 물질의 색상이 없기 때문에 물질은 검은색으로 보일 것이다.

ambient: 빛을 직접 받지 않는 곳의 주변색에 대한 속성, 예를 들어 문틈 사이로 밤에 후레쉬를 비추면 주변도 환해지는 효과가 나타나는데 이런 현상을 위한 속성

빛에는 많은 속성이 존재하지만 게임에서 사용되는 방향성 빛은 Type, diffuse, specular, Ambient, direction 정도만 사용된다.

B.2 프로그래밍에서 빛은 몇 가지 종류를 가진다.
주변광(Ambient Light): 색상과 강도만 있는 음영이 생기지 않는 빛이다.

포인트 광(point Light): 포인트를 딱 찍어주면 거기서 발광하는 효과가 난다. 포인트와 멀어지면 멀어질 수록 빛을 약하게 받는 현상이 생긴다.

방향광(Directional Light): 게임에서 많이 사용되는 방향이 있는 빛, 거리와 상관없이 일정하게 비춘다.

스포트라이트(Spot Light): 색상, 위치 ,빛에 대한 방향성을 모두 가지는 빛으로 제일 사실성이 높다.
연산이 오지게 많아지기에 영화나 그래픽스 툴에서 보통 사용되고 게임에서는 잘 사용되지 않는다.

다시 한번 강조하는데 실제 우리 눈에 보이게 되는 픽셀의 색상은 빛과 물질 속성의 혼합값으로 이루어진다.
이 실제 보여지는 픽셀 색상에 대한 감을 맞추기 힘들기에 우리는 툴을 제작하게 된다.
